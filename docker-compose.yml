name: ${GLOBAL_NAME}

services:
  nginx_proxy_manager:
    container_name: ${NGINX_PROXY_MANAGER_CONTAINER_NAME}
    image: ${NGINX_PROXY_MANAGER_IMAGE_NAME}:${NGINX_PROXY_MANAGER_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - TZ=${TIMEZONE}
      - DB_MYSQL_HOST=postgres
      - DB_MYSQL_PORT=5432
      - DB_MYSQL_USER=${POSTGRES_USER}
      - DB_MYSQL_PASSWORD=${POSTGRES_PASSWORD}
      - DB_MYSQL_NAME=${POSTGRES_DATABASE}
    ports:
      - ${NGINX_PROXY_MANAGER_HTTP_PORT}:80
      - ${NGINX_PROXY_MANAGER_HTTPS_PORT}:443
      - ${NGINX_PROXY_MANAGER_ADMIN_PORT}:81
    volumes:
      - nginx_proxy_manager_data:/data
      - nginx_proxy_manager_letsencrypt:/etc/letsencrypt
    networks:
      - default
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:81/api/nginx/status"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: ${POSTGRES_IMAGE_NAME}:${POSTGRES_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - TZ=${TIMEZONE}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default

networks:
  default:
    name: ${NGINX_PROXY_MANAGER_CONTAINER_NAME}_network
    driver: bridge

volumes:
  nginx_proxy_manager_data:
    name: ${NGINX_PROXY_MANAGER_CONTAINER_NAME}_data
    driver: local
  nginx_proxy_manager_letsencrypt:
    name: ${NGINX_PROXY_MANAGER_CONTAINER_NAME}_letsencrypt
    driver: local
  postgres_data:
    name: ${POSTGRES_CONTAINER_NAME}_data
    driver: local